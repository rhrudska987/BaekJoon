package DynamicProgramming;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class 과제 {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int N = Integer.parseInt(br.readLine());
        StringTokenizer st = null;

        List<Assignment> assignmentList = new ArrayList<>();
        int maxDay = 0;

        for (int i=0; i<N; i++){
            st = new StringTokenizer(br.readLine());
            int d = Integer.parseInt(st.nextToken());
            int w = Integer.parseInt(st.nextToken());
            assignmentList.add(new Assignment(d, w));
            maxDay = Math.max(maxDay, d);
        }

        int sum = 0;
        for (int i = maxDay; i >= 1; i--){
            int max = 0;
            int idx = 0;
            for (int j = assignmentList.size()-1; j >= 0; j--) {
                if(assignmentList.get(j).d >= i && assignmentList.get(j).w > max){
                    max = assignmentList.get(j).w;
                    idx = j;
                }
            }
            if(max == 0)
                continue;;
            sum += max;
            assignmentList.remove(idx);
        }

        System.out.println(sum);
    }

    static class Assignment {
        int d, w;
        public Assignment(int d, int w){
            this.d = d;
            this.w = w;
        }
    }

}

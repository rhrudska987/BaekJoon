package DynamicProgramming;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class IF문_좀_대신_써줘 {

    static int N, M;
    static String[][] title;
    static StringBuilder sb = new StringBuilder();

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());

        N = Integer.parseInt(st.nextToken());
        M = Integer.parseInt(st.nextToken());
        title = new String[N][2];
        for (int i = 0; i < N; i++) {
            st = new StringTokenizer(br.readLine());
            title[i][0] = st.nextToken();
            title[i][1] = st.nextToken();
        }

        for (int i = 0; i < M; i++) {
            int power = Integer.parseInt(br.readLine());
            search(power);
        }

        System.out.println(sb);
    }

    static void search(int power) {
        int left = 0;
        int right = N - 1;
        int mid = 0;
        while (left <= right) {
            mid = (left + right) / 2;
            if (Integer.parseInt(title[mid][1]) >= power) {
                right = mid - 1;
            } else {
                left = mid + 1;
            }
        }
        sb.append(title[left][0] + "\n");
    }

}

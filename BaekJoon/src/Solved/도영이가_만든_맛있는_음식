package a0621.combsubs;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class 도영이가_만든_맛있는_음식 {

	static int N;
	static int[] bitter;
	static int[] sour;
	static int min = Integer.MAX_VALUE;

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = null;

		N = Integer.parseInt(br.readLine());
		bitter = new int[N];
		sour = new int[N];
		for (int i = 0; i < N; i++) {
			st = new StringTokenizer(br.readLine(), " ");
			sour[i] = Integer.parseInt(st.nextToken());
			bitter[i] = Integer.parseInt(st.nextToken());
		}

		subs(0, 0, 1);

		System.out.println(min);
		br.close();
	}

	static void subs(int cnt, int bitterSum, int sourSum) {
		if (cnt == N) {
			if (bitterSum == 0) {
				return;
			}
			min = Math.min(min, Math.abs(bitterSum - sourSum));
			return;
		}

		subs(cnt + 1, bitterSum + bitter[cnt], sourSum * sour[cnt]);
		subs(cnt + 1, bitterSum, sourSum);
	}

}

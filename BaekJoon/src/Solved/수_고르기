package DynamicProgramming;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class 수_고르기 {

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());

		int N = Integer.parseInt(st.nextToken());
		int M = Integer.parseInt(st.nextToken());
		int[] A = new int[N];
		for (int i = 0; i < N; i++) {
			A[i] = Integer.parseInt(br.readLine());
		}

		Arrays.sort(A);

		int left = 0;
		int right = 1;
		int min = Integer.MAX_VALUE;
		while (right < N) {
			int sum = A[right] - A[left];

			if (sum < M) {
				right++;
				continue;
			} else if (sum == M) {
				min = sum;
				break;
			} else {
				min = Math.min(min, sum);
				left++;
			}
		}

		System.out.println(min);
	}

}

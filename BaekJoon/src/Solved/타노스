package DynamicProgramming;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class 타노스 {
    static int originZeroCnt = 0, originOneCnt = 0;
    static int newZeroCnt = 0, newOneCnt = 0;
    static String[] S;
    static boolean[] visited;

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        S = br.readLine().split("");
        visited = new boolean[S.length];

        for (int i=0; i<S.length; i++) {
            if (S[i].equals("0")) {
                originZeroCnt++;
            } else {
                originOneCnt++;
            }
        }

        for (int i=S.length-1; i>=0; i--) {
            if (S[i].equals("0")) {
                if (newZeroCnt < originZeroCnt/2) {
                    visited[i] = true;
                    newZeroCnt++;
                }
            }
        }

        for (int i=0; i<S.length; i++) {
            if(S[i].equals("1")) {
                if (newOneCnt < originOneCnt/2) {
                    visited[i] = true;
                    newOneCnt++;
                }
            }
        }

        String answer = "";
        for (int i=0; i<S.length; i++) {
            if (!visited[i]) {
                answer += S[i];
            }
        }

        System.out.println(answer);
    }

}

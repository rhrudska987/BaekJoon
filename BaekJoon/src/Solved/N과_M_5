package DynamicProgramming;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Nê³¼_M_5 {

	static int N, M;
	static int[] nums;
	static int[] numSet;
	static boolean[] visited;

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		nums = new int[N];
		numSet = new int[M];
		visited = new boolean[N];

		st = new StringTokenizer(br.readLine());
		for (int i = 0; i < N; i++) {
			nums[i] = Integer.parseInt(st.nextToken());
		}

		Arrays.sort(nums);
		backTracking(0);
	}

	private static void backTracking(int cnt) {
		if (cnt == M) {
			for (int i = 0; i < M; i++) {
				System.out.print(numSet[i] + " ");
			}
			System.out.println();
			return;
		}

		for (int i = 0; i < N; i++) {
			if (visited[i]) {
				continue;
			}
			numSet[cnt] = nums[i];
			visited[i] = true;
			backTracking(cnt + 1);
			visited[i] = false;
		}
	}

}

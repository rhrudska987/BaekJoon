package DynamicProgramming;

import java.util.Collections;
import java.util.PriorityQueue;

public class 이중우선순위큐 {

	static class Solution {
		public int[] solution(String[] operations) {
			PriorityQueue<Integer> maxPQ = new PriorityQueue<>(Collections.reverseOrder());
			PriorityQueue<Integer> minPQ = new PriorityQueue<>();

			for (int i=0; i<operations.length; i++) {
				if (operations[i].charAt(0) == 'I') {
					int num = Integer.parseInt(operations[i].split(" ")[1]);
					minPQ.add(num);
					maxPQ.add(num);
				} else if (operations[i].charAt(0) == 'D' && operations[i].charAt(2) == '-') {
					if (minPQ.isEmpty()) {
						continue;
					} else {
						maxPQ.remove(minPQ.poll());
					}
				} else {
					if (maxPQ.isEmpty()) {
						continue;
					} else {
						minPQ.remove(maxPQ.poll());
					}
				}
			}
			int[] answer = new int[2];
			if (minPQ.isEmpty()) {
				answer[0] = 0;
				answer[1] = 0;
			} else {
				answer[0] = maxPQ.poll();
				answer[1] = minPQ.poll();
			}
			return answer;
		}
	}

	public static void main(String[] args) {
		Solution so = new Solution();
		int[] arr = so.solution(new String[]{"I 0", "I 1", "I 1", "D 1", "I 97", "D 1"});
		System.out.println("max: " + arr[0] + ", min: " + arr[1]);
	}

}

package DynamicProgramming;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class 스위치_켜고_끄기 {

    static int N;
    static int[] light_arr;

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = null;

        N = Integer.parseInt(br.readLine());
        light_arr = new int[N + 1];

        st = new StringTokenizer(br.readLine());
        for (int i = 1; i <= N; i++) {
            light_arr[i] = Integer.parseInt(st.nextToken());
        }

        int M = Integer.parseInt(br.readLine());
        for (int i = 0; i < M; i++) {
            st = new StringTokenizer(br.readLine());
            int gender = Integer.parseInt(st.nextToken());
            int num = Integer.parseInt(st.nextToken());

            if (gender == 1) {
                int idx = 1;
                while (num * idx <= N) {
                    switchLight(num * idx);
                    idx++;
                }
            } else {
                int idx = 1;
                switchLight(num);
                while (num - idx > 0 && num + idx <= N && light_arr[num - idx] == light_arr[num + idx]) {
                    switchLight(num - idx);
                    switchLight(num + idx);
                    idx++;
                }
            }
        }

        for (int i = 1; i <= N; i++) {
            System.out.print(light_arr[i] + " ");
            if (i % 20 == 0) {
                System.out.println();
            }
        }
        System.out.println();
    }

    static void switchLight(int num) {
        if (light_arr[num] == 1) {
            light_arr[num] = 0;
        } else {
            light_arr[num] = 1;
        }
    }

}

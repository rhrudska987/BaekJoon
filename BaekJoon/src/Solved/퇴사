package DynamicProgramming;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class 퇴사 {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = null;

        int N = Integer.parseInt(br.readLine());
        int T[] = new int[N+1];
        int P[] = new int[N+1];
        for(int i=1; i<=N; i++){
            st = new StringTokenizer(br.readLine());
            T[i] = Integer.parseInt(st.nextToken());
            P[i] = Integer.parseInt(st.nextToken());
        }

        int dp[] = new int[N+2];

        int max = 0;
        for(int i=N; i>0; i--){
            if(T[i]+i > N+1) {
                dp[i] = max;
                continue;
            }
            dp[i] = Math.max((P[i] + dp[i + T[i]]), dp[i + 1]);
            dp[i] = Math.max(max, dp[i]);
            max = dp[i];
        }

        max = 0;
        for(int i=1; i<=N; i++){
            max = Math.max(max, dp[i]);
        }
        System.out.println(max);
    }
}

package DynamicProgramming;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.StringTokenizer;

public class 암호_만들기 {

    static int L, C;
    static ArrayList<String> list = new ArrayList<>();
    static ArrayList<String> ans = new ArrayList<>();
    static int vowelCnt = 0;
    static int consonant = 0;

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());

        L = Integer.parseInt(st.nextToken());
        C = Integer.parseInt(st.nextToken());

        st = new StringTokenizer(br.readLine());
        for(int i=0; i<C; i++)
            list.add(st.nextToken());

        Collections.sort(list);
        backTracking(0, 0, 0, 0);
    }

    static void backTracking(int start, int cnt, int vowelCnt, int consonant){
        if(cnt == L){
            if(vowelCnt >= 1 && consonant >= 2){
                for (int i=0; i<L; i++)
                    System.out.print(ans.get(i));
                System.out.println();
            }
            return;
        }

        for (int i=start; i<C; i++){
            ans.add(list.get(i));
            if(list.get(i).equals("a") || list.get(i).equals("e") || list.get(i).equals("i") || list.get(i).equals("o") || list.get(i).equals("u"))
                backTracking(i+1, cnt+1, vowelCnt+1, consonant);
            else
                backTracking(i+1, cnt+1, vowelCnt, consonant+1);
            ans.remove(cnt);
        }
    }
}

package DynamicProgramming;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class 평범한_배낭 {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = null;
        st = new StringTokenizer(br.readLine());
        int N = Integer.parseInt(st.nextToken());
        int K = Integer.parseInt(st.nextToken());

        int backpack[][] = new int[N+1][K+1];
        int W[] = new int[N+1];
        int V[] = new int[N+1];

        for(int i=1; i<=N; i++){
            st = new StringTokenizer(br.readLine());
            W[i] = Integer.parseInt(st.nextToken());
            V[i] = Integer.parseInt(st.nextToken());
        }

        for(int i=1; i<=N; i++){
            for(int j=1; j<=K; j++){
                if(W[i] > j)
                    backpack[i][j] = backpack[i-1][j];
                else
                    backpack[i][j] = Math.max(backpack[i-1][j], backpack[i-1][j-W[i]] + V[i]);
            }
        }
        System.out.println(backpack[N][K]);
    }
}

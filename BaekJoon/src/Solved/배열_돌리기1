package DynamicProgramming;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class 배열_돌리기1 {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        int N = Integer.parseInt(st.nextToken());
        int M = Integer.parseInt(st.nextToken());
        int R = Integer.parseInt(st.nextToken());

        int[][] arr = new int[N][M];
        for (int i=0; i<N; i++){
            st = new StringTokenizer(br.readLine());
            for (int j=0; j<M; j++)
                arr[i][j] = Integer.parseInt(st.nextToken());
        }

        for (int i=0; i<R; i++){
            int x = 0, y = 0;
            while(x < M/2 && y < N/2){
                int tmp = arr[y][x];
                arr[y][x] = arr[y][x+1];
                int n = x+1, m = y;
                int plusX = 1;
                int plusY = 0;
                while(true){
                    if(n == M-1-x && m != N-1-y){
                        plusX = 0;
                        plusY = 1;
                    }
                    else if(n == M-1-x && m == N-1-y){
                        plusX = -1;
                        plusY = 0;
                    }
                    else if(n == x && m == N-1-y) {
                        plusX = 0;
                        plusY = -1;
                    }
                    arr[m][n] = arr[m+plusY][n+plusX];
                    m += plusY;
                    n += plusX;
                    if(n == x && m == y+1){
                        arr[y+1][x] = tmp;
                        break;
                    }
                }
                x++;
                y++;
            }
        }

        for (int i=0; i<N; i++){
            for (int j=0; j<M; j++)
                System.out.print(arr[i][j] + " ");
            System.out.println();
        }

    }
}

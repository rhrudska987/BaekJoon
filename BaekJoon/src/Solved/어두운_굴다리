package DynamicProgramming;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.StringTokenizer;

public class 어두운_굴다리 {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = null;
        int N = Integer.parseInt(br.readLine());
        int M = Integer.parseInt(br.readLine());

        st = new StringTokenizer(br.readLine());
        int location[] = new int[M];
        for (int i = 0; i < M; i++) {
            location[i] = Integer.parseInt(st.nextToken());
        }

        int answer = 0;
        int l = 0;
        int r = N;
        while (l <= r) {
            int height = (l + r) / 2;
            boolean shine = true;
            if (location[0] - height > 0 || location[M - 1] + height < N) {
                shine = false;
            }
            for (int i = 0; i < M - 1; i++) {
                if (location[i] + height < location[i + 1] - height) {
                    shine = false;
                    break;
                }
            }
            if (shine) {
                answer = height;
                r = height - 1;
            } else {
                l = height + 1;
            }
        }
        System.out.println(answer);
    }

}

package DynamicProgramming;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;

public class 가장_긴_증가하는_부분_수열2 {

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int N = Integer.parseInt(br.readLine());
		StringTokenizer st = new StringTokenizer(br.readLine());

		int[] A = new int[N];
		for (int i = 0; i < N; i++) {
			A[i] = Integer.parseInt(st.nextToken());
		}

		List<Integer> list = new ArrayList<>();
		list.add(A[0]);

		for (int i = 1; i < N; i++) {
			int key = A[i];

			if (key > list.get(list.size() - 1)) {
				list.add(key);
			} else {
				int l = 0;
				int r = list.size() - 1;
				while (l < r) {
					int mid = (l + r) / 2;

					if (list.get(mid) < key) {
						l = mid + 1;
					} else {
						r = mid;
					}
				}
				
				list.set(l, key);
			}
		}

		System.out.println(list.size());
	}
}

package DynamicProgramming;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class 틱택토 {

	static char board[][];

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringBuilder sb = new StringBuilder();

		while (true) {
			String line = br.readLine();
			if (line.equals("end")) {
				break;
			}
			board = new char[3][3];
			int oCnt = 0;
			int xCnt = 0;
			for (int i = 0; i < 3; i++) {
				for (int j = 0; j < 3; j++) {
					board[i][j] = line.charAt(i * 3 + j);
					if (board[i][j] == 'X') {
						xCnt++;
					} else if (board[i][j] == 'O') {
						oCnt++;
					}
				}
			}

			if (oCnt + xCnt == 9 && xCnt - oCnt == 1) {
				if (check('O')) {
					sb.append("invalid\n");
				} else {
					sb.append("valid\n");
				}
			} else {
				if (check('O') && check('X')) {
					sb.append("invalid\n");
				} else if (check('X') && xCnt - oCnt == 1) {
					sb.append("valid\n");
				} else if (check('O') && xCnt == oCnt) {
					sb.append("valid\n");
				} else {
					sb.append("invalid\n");
				}
			}
		}
		System.out.println(sb);
	}

	static boolean check(char c) {
		for (int i = 0; i < 3; i++) {
			int cnt = 0;
			for (int j = 0; j < 3; j++) {
				if (board[i][j] == c) {
					cnt++;
				}
			}
			if (cnt == 3) {
				return true;
			}
		}

		for (int i = 0; i < 3; i++) {
			int cnt = 0;
			for (int j = 0; j < 3; j++) {
				if (board[j][i] == c) {
					cnt++;
				}
			}
			if (cnt == 3) {
				return true;
			}
		}

		if (board[0][0] == c && board[1][1] == c && board[2][2] == c) {
			return true;
		}

		if (board[0][2] == c && board[1][1] == c && board[2][0] == c) {
			return true;
		}

		return false;
	}

}

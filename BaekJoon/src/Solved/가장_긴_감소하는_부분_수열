package DynamicProgramming;

import java.util.HashSet;
import java.util.Scanner;

public class 가장_긴_감소하는_부분_수열 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int arr[] = new int[N];
        int dp[] = new int[N];

        for (int i=0; i<N; i++) {
            arr[i] = sc.nextInt();
            HashSet<Integer> set = new HashSet<>();
            set.add(arr[i]);
            for (int j=i-1; j>=0; j--) {
                if(arr[i] < arr[j])
                    set.add(arr[j]);
            }
            dp[i] = set.size();
        }

        for (int i=0; i<N; i++){
            dp[i] = 1;

            for (int j=i-1; j>=0; j--){
                if(arr[i] < arr[j] && dp[i] < dp[j] + 1)
                    dp[i] = dp[j]+1;
            }
        }

        int max = 0;
        for (int i=0; i<N; i++){
            if(dp[i] > max)
                max = dp[i];
        }
        System.out.println(max);
    }

}

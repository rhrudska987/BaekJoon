package DynamicProgramming;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class 두_수의_합 {

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = null;
		StringBuilder sb = new StringBuilder();

		int t = Integer.parseInt(br.readLine());
		while (t-- > 0) {
			st = new StringTokenizer(br.readLine());
			int n = Integer.parseInt(st.nextToken());
			int K = Integer.parseInt(st.nextToken());

			int[] S = new int[n];
			st = new StringTokenizer(br.readLine());
			for (int i = 0; i < n; i++) {
				S[i] = Integer.parseInt(st.nextToken());
			}
			Arrays.sort(S);

			int left = 0;
			int right = n - 1;
			int min = Integer.MAX_VALUE;
			int cnt = 0;
			while (left < right) {
				int sum = S[left] + S[right];
				if (Math.abs(K - min) > Math.abs(K - sum)) {
					min = sum;
					cnt = 1;
				} else if (Math.abs(K - min) == Math.abs(K - sum)) {
					cnt++;
				}

				if (sum < K) {
					left++;
				} else {
					right--;
				}
			}

			sb.append(cnt + "\n");
		}

		System.out.println(sb);
	}

}

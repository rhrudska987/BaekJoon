package DynamicProgramming;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class 주식 {

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = null;
		StringBuilder sb = new StringBuilder();

		int T = Integer.parseInt(br.readLine());
		for (int i = 0; i < T; i++) {
			int N = Integer.parseInt(br.readLine());
			st = new StringTokenizer(br.readLine());
			int[] price = new int[N];
			for (int j = 0; j < N; j++) {
				price[j] = Integer.parseInt(st.nextToken());
			}

			int max = price[N - 1];
			long profit = 0;
			for (int j = N - 2; j >= 0; j--) {
				if (max > price[j]) {
					profit += max - price[j];
					continue;
				}
				max = price[j];
			}
			sb.append(profit + "\n");
		}
		System.out.println(sb);
	}

}

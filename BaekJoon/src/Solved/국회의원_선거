package DynamicProgramming;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Collections;
import java.util.PriorityQueue;

public class 국회의원_선거 {

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());
		int N = Integer.parseInt(br.readLine());
		int dasom = Integer.parseInt(br.readLine());
		for (int i = 1; i < N; i++) {
			pq.add(Integer.parseInt(br.readLine()));
		}

		int answer = 0;
		while (!pq.isEmpty() && pq.peek() >= dasom) {
			int voteCnt = pq.poll();
			dasom++;
			answer++;
			pq.add(voteCnt - 1);
		}

		System.out.println(answer);
	}

}

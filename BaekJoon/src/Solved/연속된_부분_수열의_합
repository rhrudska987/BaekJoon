package DynamicProgramming;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class 연속된_부분_수열의_합 {

	static class Solution {
		public int[] solution(int[] sequence, int k) {
			int[] answer = new int[2];
			int left = 0;
			int right = -1;
			int sum = 0;
			int min = Integer.MAX_VALUE;
			while (left < sequence.length) {
				if (sum == k) {
					if (right - left < min) {
						min = right - left;
						answer[0] = left;
						answer[1] = right;
					}
					sum -= sequence[left++];
				} else if (sum < k) {
					right++;
					if (right >= sequence.length) {
						break;
					}
					sum += sequence[right];
				} else {
					sum -= sequence[left++];
				}
			}
			return answer;
		}
	}

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		Solution so = new Solution();
		int[] result = so.solution(new int[] {2,2,2,2,2}, 6);
		System.out.println(result[0]);
		System.out.println(result[1]);
	}

}

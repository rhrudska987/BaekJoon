package DynamicProgramming;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class 가장_큰_증가하는_부분_수열 {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int N = Integer.parseInt(br.readLine());
        StringTokenizer st = new StringTokenizer(br.readLine());
        int[] A = new int[N];
        for (int i=0; i<N; i++)
            A[i] = Integer.parseInt(st.nextToken());

        int[] dp = new int[N];
        dp[0] = A[0];
        for (int i=1; i<N; i++){
            int max = 0;
            for (int j=i-1; j>=0; j--){
                if(A[i] > A[j] && (dp[j] + A[i]) > max){
                    dp[i] = dp[j] + A[i];
                    max = dp[i];
                }
            }
            if (max == 0)
                dp[i] = A[i];
        }

        int max = 0;
        for (int i=0; i<N; i++){
            if(dp[i] > max)
                max = dp[i];
        }
        System.out.println(max);
    }
}

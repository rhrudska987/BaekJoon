package DynamicProgramming;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.StringTokenizer;

public class 영단어_암기는_괴로워 {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        int N = Integer.parseInt(st.nextToken());
        int M = Integer.parseInt(st.nextToken());

        HashMap<String, Integer> wordMap = new HashMap<>();
        for (int i = 0; i < N; i++) {
            String word = br.readLine();
            if (word.length() < M) {
                continue;
            }
            wordMap.put(word, wordMap.getOrDefault(word, 1) + 1);
        }

        List<String> words = new ArrayList<>(wordMap.keySet());

        Collections.sort(words, new Comparator<String>() {
            @Override
            public int compare(String o1, String o2) {
                if (wordMap.get(o1) != wordMap.get(o2)) {
                    return wordMap.get(o2) - wordMap.get(o1);
                } else {
                    if (o1.length() != o2.length()) {
                        return o2.length() - o1.length();
                    } else {
                        return o1.compareTo(o2);
                    }
                }
            }
        });

        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < words.size(); i++) {
            sb.append(words.get(i) + "\n");
        }
        sb.deleteCharAt(sb.length() - 1);
        System.out.println(sb);
    }

}

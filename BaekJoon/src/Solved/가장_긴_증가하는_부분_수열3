package DynamicProgramming;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;

public class 가장_긴_증가하는_부분_수열3 {

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int N = Integer.parseInt(br.readLine());

		StringTokenizer st = new StringTokenizer(br.readLine());
		int[] A = new int[N];
		for (int i = 0; i < N; i++) {
			A[i] = Integer.parseInt(st.nextToken());
		}

		List<Integer> list = new ArrayList<>();
		list.add(Integer.MIN_VALUE);

		for (int i = 0; i < N; i++) {
			int num = A[i];
			int left = 1;
			int right = list.size() - 1;
			if (num > list.get(right)) {
				list.add(num);
			} else {
				while (left < right) {
					int mid = (left + right) / 2;
					if (list.get(mid) >= num) {
						right = mid;
					} else {
						left = mid + 1;
					}
				}
				list.set(right, num);
			}
		}

		System.out.println(list.size() - 1);
	}

}

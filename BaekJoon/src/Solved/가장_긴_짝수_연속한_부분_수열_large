package DynamicProgramming;

import java.util.Scanner;

public class 가장_긴_짝수_연속한_부분_수열_large {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();

        int[] arr = new int[N];
        for (int i=0; i<N; i++)
            arr[i] = sc.nextInt();

        int max = 0;
        int start = 0;
        int end = 0;
        int oddCnt = 0;

        while(end < N) {
            if(oddCnt < K){
                if(arr[end] % 2 == 1)
                    oddCnt++;
                end++;
                max = Math.max(end - start - oddCnt, max);
            }
            else if(arr[end] % 2 == 0){
                end++;
                max = Math.max(end - start - oddCnt, max);
            }
            else {
                if(arr[start] % 2 == 1)
                    oddCnt--;
                start++;
            }
        }
        System.out.println(max);
    }

}

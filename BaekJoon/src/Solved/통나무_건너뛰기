package a0620.perm;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.Deque;
import java.util.LinkedList;
import java.util.StringTokenizer;

public class 통나무_건너뛰기 {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringBuilder sb = new StringBuilder();
		StringTokenizer st = null;

		int T = Integer.parseInt(br.readLine());
		while (T-- > 0) {
			int N = Integer.parseInt(br.readLine());
			int[] num_arr = new int[N];

			st = new StringTokenizer(br.readLine(), " ");
			for (int i = 0; i < N; i++) {
				num_arr[i] = Integer.parseInt(st.nextToken());
			}

			Arrays.sort(num_arr);

			Deque<Integer> deque = new LinkedList<>();
			deque.add(num_arr[N - 1]);
			for (int i = N - 2; i >= 0; i -= 2) {
				deque.addLast(num_arr[i]);
				if (i - 1 < 0) {
					break;
				}
				deque.addFirst(num_arr[i - 1]);
			}

			int max = Math.abs(deque.peekFirst() - deque.peekLast());
			int before = deque.poll();
			while (!deque.isEmpty()) {
				int cur = deque.poll();
				max = Math.max(max, Math.abs(before - cur));
				before = cur;
			}
			sb.append(max).append("\n");
		}

		System.out.println(sb.toString());
		br.close();
	}
}
